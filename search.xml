<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>咖啡萃取那点事（维护中）</title>
      <link href="/posts/aacb16ae.html"/>
      <url>/posts/aacb16ae.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 饮食 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 咖啡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客主题调整心得(hexo-theme-fluid)（维护中）</title>
      <link href="/posts/c514df6e.html"/>
      <url>/posts/c514df6e.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://drive.fluid-dev.com/docs/">Fluid</a> 是一款 Material Design 风格的Hexo博客主题。<br>其具有 可配置项丰富、更新方便、支持LaTeX数学公式、内配置多个博客评论插件 等特点。</p><blockquote><p>为减少在更新主题时因直接修改主题资源文件而可能带来的代码冲突问题、减少代码调整工作量，本文尽量以引入外部 <strong>css</strong> / <strong>js</strong> / <strong>img</strong> / <strong>font</strong> 等文件的形式进行主题修改。</p></blockquote><h2 id="主题获取"><a href="#主题获取" class="headerlink" title="主题获取"></a>主题获取</h2><h3 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h3><p>在博客根目录下，使用 <strong>npm</strong> 进行主题安装。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-theme-fluid --save</span><br></pre></td></tr></table></figure><p>通过 npm 安装的主题模块存放在博客的 <strong>“node_modules”</strong> 文件夹内。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/modifications-for-hexo-theme/fluid-1.png" alt="fluid 主题文件夹路径"></p><h3 id="主题默认化"><a href="#主题默认化" class="headerlink" title="主题默认化"></a>主题默认化</h3><p>在博客根目录的 <em>_config.yml</em> 文件中，配置博客所选用的主题为 <strong>fluid</strong>。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/modifications-for-hexo-theme/fluid-2.png" alt="设置 fluid 为默认主题"></p><h3 id="主题全局配置"><a href="#主题全局配置" class="headerlink" title="主题全局配置"></a>主题全局配置</h3><p>在博客根目录下创建 <em>_config.fluid.yml</em> 文件，将并主题文件夹内的 <em>_config.yml</em> 文件中所有内容进行复制。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/modifications-for-hexo-theme/fluid-3.png" alt="主题全局配置文件"></p><h2 id="主题自定义"><a href="#主题自定义" class="headerlink" title="主题自定义"></a>主题自定义</h2><h3 id="创建自定义配置文件"><a href="#创建自定义配置文件" class="headerlink" title="创建自定义配置文件"></a>创建自定义配置文件</h3><p>访问 <strong>hexo-theme-fluid/source</strong> 文件夹，使用 <strong>Powershell</strong> 执行如下命令生成文件夹与配置文件。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 js 文件夹内创建 selfie 文件夹，并创建 selfie.js 文件。</span></span><br><span class="line">mkdir js/selfie &amp;&amp; <span class="built_in">cd</span> js/selfie &amp;&amp; <span class="built_in">New-Item</span> selfie.js <span class="literal">-type</span> file</span><br><span class="line"><span class="comment"># 在 css 文件夹内执行相似操作。</span></span><br><span class="line">mkdir css/selfie &amp;&amp; <span class="built_in">cd</span> css/selfie &amp;&amp; <span class="built_in">New-Item</span> selfie.css <span class="literal">-type</span> file</span><br><span class="line"><span class="comment"># 新建 font 文件夹。</span></span><br><span class="line">mkdir font</span><br></pre></td></tr></table></figure><ul><li>在 <strong>_config.fluid.yml</strong> 文件内找到 <strong>custom_xxx</strong> 所在行，引入所需的 css 或 js 文件。</li></ul><h3 id="天气插件引入（e-g-和风天气）"><a href="#天气插件引入（e-g-和风天气）" class="headerlink" title="天气插件引入（e.g. 和风天气）"></a>天气插件引入（e.g. 和风天气）</h3><p>给博客主题引入 <a href="https://dev.qweather.com/">和风天气</a> 网页版插件。<br>注册个人账号后，在 <strong>和风天气控制台</strong> 选择 <strong>插件管理</strong> 页面，点击 <strong>创建插件</strong> 按钮。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/modifications-for-hexo-theme/qweather-1.png" alt="插件管理"><br>页面将跳转到 <a href="https://widget.qweather.com/">天气插件</a> 页，按需选择要创建的插件类型。</p><blockquote><p>此处将创建 <em>简约天气插件</em>，并将其配置在 Fluid 主题的导航菜单栏。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/modifications-for-hexo-theme/qweather-2.png" alt="插件选择"><br>在 <strong>天气插件创建页</strong> 中，输入自定义参数，并点击 <strong>生成代码</strong> 按钮。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/modifications-for-hexo-theme/qweather-3.png" alt="代码生成"><br>按照所生成代码，在博客主题中进行如下配置。</p><ul><li>在 <strong>js/selfie</strong> 文件夹中新建 <strong>qweather-widget.js</strong> 文件，并引入 <strong>WIDGET</strong> 代码。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 和风天气自定义插件代码 */</span></span><br><span class="line">WIDGET = &#123;</span><br><span class="line">    <span class="string">&quot;CONFIG&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;modules&quot;</span>: <span class="string">&quot;01234&quot;</span>,</span><br><span class="line">        <span class="string">&quot;background&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;tmpColor&quot;</span>: <span class="string">&quot;FFFFFF&quot;</span>,</span><br><span class="line">        <span class="string">&quot;tmpSize&quot;</span>: <span class="string">&quot;16&quot;</span>,</span><br><span class="line">        <span class="string">&quot;cityColor&quot;</span>: <span class="string">&quot;FFFFFF&quot;</span>,</span><br><span class="line">        <span class="string">&quot;citySize&quot;</span>: <span class="string">&quot;16&quot;</span>,</span><br><span class="line">        <span class="string">&quot;aqiColor&quot;</span>: <span class="string">&quot;FFFFFF&quot;</span>,</span><br><span class="line">        <span class="string">&quot;aqiSize&quot;</span>: <span class="string">&quot;16&quot;</span>,</span><br><span class="line">        <span class="string">&quot;weatherIconSize&quot;</span>: <span class="string">&quot;20&quot;</span>,</span><br><span class="line">        <span class="string">&quot;alertIconSize&quot;</span>: <span class="string">&quot;16&quot;</span>,</span><br><span class="line">        <span class="string">&quot;padding&quot;</span>: <span class="string">&quot;10px 10px 10px 10px&quot;</span>,</span><br><span class="line">        <span class="string">&quot;shadow&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;language&quot;</span>: <span class="string">&quot;auto&quot;</span>,</span><br><span class="line">        <span class="string">&quot;borderRadius&quot;</span>: <span class="string">&quot;5&quot;</span>,</span><br><span class="line">        <span class="string">&quot;fixed&quot;</span>: <span class="string">&quot;false&quot;</span>,</span><br><span class="line">        <span class="string">&quot;vertical&quot;</span>: <span class="string">&quot;top&quot;</span>,</span><br><span class="line">        <span class="string">&quot;horizontal&quot;</span>: <span class="string">&quot;left&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key&quot;</span>: <span class="string">&quot;568ebb5092b445539bfc6abd7cf111a4&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在 <strong>selfie.js</strong> 文件内实现插件引入。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 和风天气插件元素生成 */</span></span><br><span class="line"><span class="keyword">let</span> seniverseNav = <span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>)</span><br><span class="line">seniverseNav.setAttribute(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;he-plugin-simple&quot;</span>)</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;navbarSupportedContent&quot;</span>).insertBefore(seniverseNav, <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;navbar-nav ml-auto text-center&quot;</span>)[<span class="number">0</span>])</span><br></pre></td></tr></table></figure></li><li>配置 <strong>_config.fluid.yml</strong>，引入上述 js 文件。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/modifications-for-hexo-theme/qweather-js-1.png" alt="WIDGET代码引入"></li></ul><p>最终页面效果如下示。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/modifications-for-hexo-theme/qweather-4.png" alt="和风简约天气插件效果图"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建指南</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<h2 id="本地环境配置"><a href="#本地环境配置" class="headerlink" title="本地环境配置"></a>本地环境配置</h2><p>本文指定 <strong>Windows</strong> 为本地开发环境。</p><h3 id="Chocolatey-安装"><a href="#Chocolatey-安装" class="headerlink" title="Chocolatey 安装"></a>Chocolatey 安装</h3><p><strong>Chocolatey</strong> 是 Windows 平台上的包管理工具，类似于 macOS 平台上的 <em><strong>Homebrew</strong></em>、GNU/Linux 平台上的 <em><strong>apt</strong></em> | <em><strong>YaST</strong></em> | <em><strong>pacman</strong></em> | <em><strong>yum</strong></em> 等。<br>通过管理员模式使用 Powershell，输入如下命令进行安装。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> Bypass <span class="literal">-Scope</span> <span class="keyword">Process</span> <span class="literal">-Force</span>; [<span class="type">System.Net.ServicePointManager</span>]::SecurityProtocol = [<span class="type">System.Net.ServicePointManager</span>]::SecurityProtocol <span class="operator">-bor</span> <span class="number">3072</span>; <span class="built_in">iex</span> ((<span class="built_in">New-Object</span> System.Net.WebClient).DownloadString(<span class="string">&#x27;https://chocolatey.org/install.ps1&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="Node-js-配置"><a href="#Node-js-配置" class="headerlink" title="Node.js 配置"></a>Node.js 配置</h3><p>若本地开发环境未安装 Node.js，可访问 <a href="https://nodejs.org/en/">Node.js</a> 网站，在下载页面选择 .msi 文件进行安装。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/nodejs-1.png" alt="Node.js下载"><br>默认安装完毕后可以在 <strong>命令提示符</strong> 下输入命令，检查相关的系统环境变量是否已正确配置。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">path</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查Node.js版本号</span></span><br><span class="line">node -v</span><br><span class="line"><span class="comment"># 检查npm版本号</span></span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>以全局模式安装 hexo-cli 模块。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="博客初始文件夹生成"><a href="#博客初始文件夹生成" class="headerlink" title="博客初始文件夹生成"></a>博客初始文件夹生成</h3><p>Windows系统下选定某处新建文件夹（e.g. 在C盘 “文档” 文件夹内生成  <strong>“demoscript”</strong> 文件夹）并切换至该文件夹路径。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir demoscript &amp;&amp; <span class="built_in">cd</span> demoscript</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/demoscript-1.png" alt="demoscript"></p><h3 id="Git-本地配置"><a href="#Git-本地配置" class="headerlink" title="Git 本地配置"></a>Git 本地配置</h3><p>若本地开发环境未安装 Git，可使用 Chocolatey 相关命令在终端内进行 Git 安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choco install git</span><br></pre></td></tr></table></figure><p>完成安装后使用git配置命令进行 <strong>全局</strong> 信息配置（此处仅配置 <strong>代码托管平台</strong> 的 <strong>单一一个</strong> 全局 <strong>电子邮件地址</strong> 和 <strong>用户名</strong>）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git global config --user.name <span class="string">&quot;alphabet123&quot;</span></span><br><span class="line">git global config --user.email <span class="string">&quot;bakka345@gmail.com&quot;</span></span><br></pre></td></tr></table></figure><p>完成后使用命令在 <strong>demoscript</strong> 文件夹内初始化一个新的 Git 仓库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>考虑到用户可能会开发多个项目部署/推送到不同的代码托管平台，此处将在文件夹内单独设置本项目的 <strong>电子邮件地址</strong> 和 <strong>用户名</strong> 信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此处信息设置与上同</span></span><br><span class="line">git <span class="built_in">local</span> config --user.name <span class="string">&quot;alphabet123&quot;</span></span><br><span class="line">git <span class="built_in">local</span> config --user.email <span class="string">&quot;bakka345@gmail.com&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Hexo-本地项目配置"><a href="#Hexo-本地项目配置" class="headerlink" title="Hexo 本地项目配置"></a>Hexo 本地项目配置</h3><p>使用 <strong>hexo</strong> 相关命令进行Hexo博客项目的初始化 -&gt; 在文件夹内生成需要的文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line"><span class="comment"># 若命令执行失败，可使用 &quot;git clone&quot; 的形式将 基础文件（hexo-starter仓库） 下载至文件夹内</span></span><br><span class="line"><span class="comment"># 若仓库克隆速度较慢，可在下命令中的 &quot;https://github.com/***&quot; 前添加 &quot;https://ghproxy.com/&quot; </span></span><br><span class="line"><span class="comment"># ghproxy 是其中一个Github的代理加速站，可替换为其它站点</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/hexojs/hexo-starter.git</span><br></pre></td></tr></table></figure><p>Hexo具有相当数量的易用且可自定义主题。本文使用<a href="https://www.izhaoo.com/">zhaoo</a>主题进行示范。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/hexo-theme-zhaoo-1.png" alt="hexo-theme-zhaoo"><br>在博客文件夹根目录下，输入如下指令进行主题安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此处亦可以在 &quot;https://github.com/***&quot; 前加上代理加速站的网址以实现加速效果</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/izhaoo/hexo-theme-zhaoo.git themes/zhaoo</span><br></pre></td></tr></table></figure><p>在根目录的 “_config.yml” 文件内设置使用的主题。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/hexo-config-1.png" alt="选择主题"></p><h2 id="博客网站部署"><a href="#博客网站部署" class="headerlink" title="博客网站部署"></a>博客网站部署</h2><p>使用 Git 将生成的静态博客网站部署到 <a href="https://bitbucket.org/">Bitbucket</a> 上，并同步部署至 <a href="https://vercel.com/">Vercel</a>。</p><h3 id="Bitbucket-个人设置"><a href="#Bitbucket-个人设置" class="headerlink" title="Bitbucket 个人设置"></a>Bitbucket 个人设置</h3><p>在Bitbucket账户注册页上输入所需信息。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/bitbucket-1.png" alt="Bitbucket注册页"><br>完成后进入个人控制台。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/bitbucket-2.png" alt="Bitbucket个人控制台"><br>使用 <strong>ssh-keygen</strong> 命令为项目上传的目标服务器/代码托管平台生成SSH访问认证所需的公钥与私钥文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -f <span class="string">&quot;C:\Users\Administrator\.ssh\id_rsa_bitbucket&quot;</span> -C <span class="string">&quot;bakka345@gmail.com&quot;</span></span><br></pre></td></tr></table></figure><p>确认命令输入后会在用户目录的 “.ssh” 文件夹中生成 “id_rsa_bitbucket” 私钥文件与 “id_rsa_bitbucket.pub” 公钥文件。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/ssh-keygen-1.png" alt="ssh-keygen"><br>在 “.ssh” 文件夹内新建 <strong>config</strong> 配置文件，用于简化SSH相关操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Bitbucket 设定</span><br><span class="line">Host bitbucket.org# 关键词</span><br><span class="line">HostName bitbucket.org# 真实的主机名称</span><br><span class="line">User git# 登录用户名</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_bitbucket# 指定读取的认证文件路径</span><br></pre></td></tr></table></figure><p>回到Bitbucket个人控制台页面，左下角“个人”图标，跳转至 “个人设置” 页。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/bitbucket-3.png" alt="Bitbucket个人设置页"><br>继续跳转至 “SSH密钥” 页面，点击 “添加密钥” 按钮，在输入框内配置之前生成的 “id_rsa_bitbucket” 公钥文件的内容。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/bitbucket-4.png" alt="SSH公钥录入"></p><h3 id="Bitbucket-仓库配置"><a href="#Bitbucket-仓库配置" class="headerlink" title="Bitbucket 仓库配置"></a>Bitbucket 仓库配置</h3><p>返回个人控制台页面，新建一个项目。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/bitbucket-5.png" alt="项目新建"><br>项目创建完成后新建一个仓库。</p><blockquote><p>注意：仓库名称应符合 “你的用户名.bitbucket.io” 的形式；按本文配置，此处应为 <strong>alphabet123.bitbucket.io</strong>。<br>如果不想让其他访问者看到仓库内容，可将访问级别设定为 “私有仓库”。<br>README.md 文件可酌情生成。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/bitbucket-6.png" alt="仓库新建"></p><h3 id="本地博客部署"><a href="#本地博客部署" class="headerlink" title="本地博客部署"></a>本地博客部署</h3><p>在博客文件夹根目录下，运行终端以在本地安装 <strong>hexo-deployer-git</strong> 模块。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>回到根目录的 “_config.yml” 文件中，配置部署相关信息。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/hexo-config-2.png" alt="部署信息配置"><br>在终端内使用如下命令生成静态网页文件并部署到仓库中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>若各项配置正确且仓库可正常访问，终端会显示信息 “Deploy done: git”。<br>此时等待一段时间，在浏览器内输入 “alphabet123.bitbucket.io”，正常情况下可访问自建的博客页面。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/bitbucket-io-1.png" alt="alphabet123.bitbucket.io"></p><h3 id="Vercel-配置"><a href="#Vercel-配置" class="headerlink" title="Vercel 配置"></a>Vercel 配置</h3><p>在 <a href="https://vercel.com/signup">Vercel 账户注册页</a> 上选择 Vercel 账号初始化方式。</p><blockquote><p>由于本文示范项目是部署在 Bitbucket 上，因此可选择 <em><strong>通过现有 Bitbucket 账户开始</strong></em> 或 <em><strong>通过邮箱注册账户开始</strong></em>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/vercel-1.png" alt="Vercel SignUp"><br>完成注册后进入 Vercel 个人控制台，选择 <strong>新建项目</strong>。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/vercel-2.png" alt="新建 Vercel 项目"><br>在本文案例环境下，选择 <strong>使用 Bitbucket 继续</strong> 选项。</p><blockquote><p>需要设置仓库可见属性为 <strong>公开</strong>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/vercel-3.png" alt="关联到 Bitbucket 账号"><br>导入已在 Bitbucket 创建的静态博客项目。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/vercel-4.png" alt="项目导入"><br>将导入项目关联到 Vercel 个人账号。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/vercel-5.png" alt="项目关联"><br>将项目内所有内容导入，完成后点击 <strong>Deploy</strong> 按钮，回到 <strong>项目</strong> 页面点击访问部署在 Vercel 上面的博客。<br><img src="https://cdn.jsdelivr.net/gh/oddsunallday/hexo-scissors-img/building-hexo-blog/vercel-6.png" alt="完成部署"></p><p>大功告成！</p><p style="font-size: 2.5em; font-family: 'Homework'">Talk is cheap, show me your code.</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Git </tag>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
